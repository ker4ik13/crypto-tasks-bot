generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @unique
  firstName      String
  lastName       String?
  username       String?
  languageCode   String?
  isAdmin        Boolean?  @default(false)
  currentBalance Float     @default(0)
  outputBalance  Float     @default(0)
  payments       Payment[]
  createdDate    DateTime  @default(now())

  // Пользователь, который пригласил данного пользователя (через реферальный код)
  invitedBy   Referral? @relation("InvitedUsers", fields: [invitedById], references: [id])
  invitedById Int?

  // Собственный реферальный код, который принадлежит данному пользователю
  referral Referral? @relation("ReferralOwner")
}

model Payment {
  id          Int            @id @default(autoincrement())
  date        DateTime
  requestDate DateTime       @default(now())
  amount      Float
  currency    String
  status      WithdrawStatus @default(pending)
  userId      Int
  user        User           @relation(fields: [userId], references: [id])
}

model Referral {
  id   Int    @id @default(autoincrement())
  code String @unique

  // Владелец реферального кода (приглашающий пользователь)
  owner   User @relation("ReferralOwner", fields: [ownerId], references: [id])
  ownerId Int  @unique

  // Пользователи, приглашённые по данному реферальному коду
  invitedUsers User[] @relation("InvitedUsers")
}

model Promocode {
  id         Int     @id @default(autoincrement())
  promo      String  @unique
  amount     Float
  currency   String
  usageLimit Int
  usageCount Int     @default(0)
  isActive   Boolean @default(true)
}

model SponsorChannels {
  id             Int      @id @default(autoincrement())
  channelName    String
  channelLink    String
  isActive       Boolean  @default(true)
  createdDate    DateTime @default(now())
  expirationDate DateTime
  sponsorName    String
  sponsorLink    String
}

model Contacts {
  id          Int      @id @default(autoincrement())
  contactName String
  contactLink String
  isActive    Boolean  @default(true)
  createdDate DateTime @default(now())
}

enum WithdrawStatus {
  pending
  success
  failed
}
